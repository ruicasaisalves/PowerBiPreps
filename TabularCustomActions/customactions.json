{
  "Actions": [
    {
      "Name": "Basic calculations\\ MIN",
      "Enabled": "true",
      "Execute": "// Creates a MIN measure for every currently selected column and hides the column.\r\nforeach(var c in Selected.Columns)\r\n{\r\n    var newMeasure = c.Table.AddMeasure(\r\n    c.Name.Replace(\"_\", \"\"),                    // Name\r\n    \"MIN(\" + c.DaxObjectFullName + \")\",    // DAX expression\r\n        c.DisplayFolder                        // Display Folder\r\n    );\r\n\r\n    // Provide some documentation:\r\n    newMeasure.Description = \"This measure is the minimum of column \" + c.DaxObjectFullName;\r\n\r\n    // Hide the base column:\r\n    c.IsHidden = true;\r\n}",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Name": "Basic calculations\\ SUM",
      "Enabled": "true",
      "Execute": "// Creates a SUM measure for every currently selected column and hides the column.\r\nforeach(var c in Selected.Columns)\r\n{\r\n    var newMeasure = c.Table.AddMeasure(\r\n    c.Name.Replace(\"_\", \"\"),                    // Name\r\n        \"SUM(\" + c.DaxObjectFullName + \")\",    // DAX expression\r\n        c.DisplayFolder                        // Display Folder\r\n    );\r\n    \r\n    // Set the format string on the new measure:\r\n    //newMeasure.FormatString = \"0.00\";\r\n\r\n    // Provide some documentation:\r\n    newMeasure.Description = \"This measure is the sum of column \" + c.DaxObjectFullName;\r\n\r\n    // Hide the base column:\r\n    c.IsHidden = true;\r\n}",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Name": "Formatting\\ 1 Decimal place",
      "Enabled": "true",
      "Execute": "Selected.Measures.ForEach(m => m.FormatString = \"#,0.0\");",
      "Tooltip": "",
      "ValidContexts": "Measure, Column"
    },
    {
      "Name": "Formatting\\ 2 Decimal places",
      "Enabled": "true",
      "Execute": "Selected.Measures.ForEach(m => m.FormatString = \"#,0.00\");",
      "Tooltip": "",
      "ValidContexts": "Measure, Column"
    },
    {
      "Name": "Formatting\\ CamelCase to Proper Case",
      "Enabled": "true",
      "Execute": "foreach(var obj in Selected.OfType<ITabularNamedObject>()) {\r\n    var oldName = obj.Name;\r\n    var newName = new System.Text.StringBuilder();\r\n    for(int i = 0; i < oldName.Length; i++) {\r\n        // First letter should always be capitalized:\r\n        if(i == 0) newName.Append(Char.ToUpper(oldName[i]));\r\n\r\n        // A sequence of two uppercase letters followed by a lowercase letter should have a space inserted\r\n        // after the first letter:\r\n        else if(i + 2 < oldName.Length && char.IsLower(oldName[i + 2]) && char.IsUpper(oldName[i + 1]) && char.IsUpper(oldName[i]))\r\n        {\r\n            newName.Append(oldName[i]);\r\n            newName.Append(\" \");\r\n        }\r\n\r\n        // All other sequences of a lowercase letter followed by an uppercase letter, should have a space\r\n        // inserted after the first letter:\r\n        else if(i + 1 < oldName.Length && char.IsLower(oldName[i]) && char.IsUpper(oldName[i+1]))\r\n        {\r\n            newName.Append(oldName[i]);\r\n            newName.Append(\" \");\r\n        }\r\n        else\r\n        {\r\n            newName.Append(oldName[i]);\r\n        }\r\n    }\r\n    obj.Name = newName.ToString();\r\n}",
      "Tooltip": "",
      "ValidContexts": "Measure, Column"
    },
    {
      "Name": "Formatting\\ Date yyyy/mm/dd",
      "Enabled": "true",
      "Execute": "// Formats all the selected columns to a specific date format\r\nforeach(var c in Selected.Columns)\r\n{\r\n    if(c.DataType == DataType.DateTime)\r\n    \r\n    // Set the format string on the new measure:\r\n    c.FormatString = \"yyyy/mm/dd\";\r\n    \r\n}",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Name": "Formatting\\ Date yyyy-mm-dd",
      "Enabled": "true",
      "Execute": "// Formats all the selected columns to a specific date format\r\nforeach(var c in Selected.Columns)\r\n{\r\n    if(c.DataType == DataType.DateTime)\r\n    \r\n    // Set the format string on the new measure:\r\n    c.FormatString = \"yyyy-mm-dd\";\r\n    \r\n}",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Name": "Formatting\\ Hide object",
      "Enabled": "true",
      "Execute": "Selected.Columns.ForEach(c => c.IsHidden = true);\r\n\r\n",
      "Tooltip": "",
      "ValidContexts": "Measure, Column"
    },
    {
      "Name": "Formatting\\ Percentage 1 Decimal place",
      "Enabled": "true",
      "Execute": "Selected.Measures.ForEach(m => m.FormatString = \"#,0.0%;-#,0.0%;#,0.0%\");",
      "Tooltip": "",
      "ValidContexts": "Measure"
    },
    {
      "Name": "Formatting\\ Percentage 2 Decimal places",
      "Enabled": "true",
      "Execute": "Selected.Measures.ForEach(m => m.FormatString = \"#,0.00%;-#,0.00%;#,0.00%\");",
      "Tooltip": "",
      "ValidContexts": "Measure"
    },
    {
      "Name": "Formatting\\ Whole Number",
      "Enabled": "true",
      "Execute": "Selected.Measures.ForEach(m => m.FormatString = \"#,0\");",
      "Tooltip": "",
      "ValidContexts": "Measure, Column"
    }
  ]
}
